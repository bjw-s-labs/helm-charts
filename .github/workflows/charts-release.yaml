---
name: "Charts: Release"

concurrency: helm-release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - rework-publishing-ci
    paths:
      - "charts/**"

jobs:
  prepare-release:
    name: Prepare data required for release
    runs-on: ubuntu-22.04
    outputs:
      repoConfiguration: ${{ steps.repo-config.outputs.config }}
      libraryChartsToRelease: ${{ steps.changed-library-charts.outputs.all_changed_files }}
      applicationChartsToRelease: ${{ steps.changed-charts.outputs.all_changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Grab repository configuration
        id: repo-config
        shell: bash
        run: |
          echo "config=$(yq '.' '.ci/repo-config.yaml' -o json -I=0)" >> "$GITHUB_OUTPUT"

      - name: Get changed library charts
        id: changed-library-charts
        uses: tj-actions/changed-files@v45
        with:
          matrix: true
          base_sha: main  # TODO: Remove this
          path: charts
          dir_names: true
          dir_names_max_depth: 2
          files: |
            library/**

      - name: Get changed charts
        id: changed-charts
        uses: tj-actions/changed-files@v45
        with:
          matrix: true
          base_sha: main  # TODO: Remove this
          path: charts
          dir_names: true
          dir_names_max_depth: 2
          files_ignore: |
            library/**

  package-library-charts:
    name: Package library charts
    runs-on: ubuntu-22.04
    needs:
      - prepare-release
    strategy:
      matrix:
        charts: ${{ fromJSON(needs.prepare-release.outputs.libraryChartsToRelease) }}
      fail-fast: false
    if: ${{ needs.prepare-release.outputs.libraryChartsToRelease != '[]' }}
    steps:
      - name: Checkout source branch
        if: ${{ !contains(fromJSON(needs.prepare-release.outputs.repoConfiguration).excluded-charts-release, matrix.charts) }}
        uses: actions/checkout@v4
        with:
          path: src
          fetch-depth: 0

      - name: Package Helm charts
        uses: ./src/.github/actions/charts-package
        if: ${{ !contains(fromJSON(needs.prepare-release.outputs.repoConfiguration).excluded-charts-release, matrix.charts) }}
        with:
          rootFolder: src/charts
          chartFolder: ${{ matrix.charts }}

  # release-library-charts-to-github-pages:
  #   name: Release library charts to GitHub Pages
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - package-library-charts
  #   if: ${{ always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
  #   permissions:
  #     pages: write
  #     id-token: write
  #   steps:
  #     - name: Checkout source branch
  #       uses: actions/checkout@v4
  #       with:
  #         path: src

  #     - name: Checkout gh-pages branch
  #       uses: actions/checkout@v4
  #       with:
  #         path: gh-pages
  #         ref: gh-pages
  #         fetch-depth: 0

  #     - name: Prepare artifacts for release to GitHub Pages
  #       uses: ./src/.github/actions/charts-release-ghpages
  #       with:
  #         artifactPattern: library__*
  #         targetFolder: gh-pages
  #         targetBranch: gh-pages

  #     - name: Publish changes to GitHub Pages
  #       uses: ./src/.github/actions/publish-folder-to-pages
  #       with:
  #         path: gh-pages/
  #         deleteArtifactAfterPublish: true

  # release-charts:
  #   name: Release charts
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - changed-charts
  #     - release-library-charts
  #   strategy:
  #     matrix:
  #       charts: ${{ fromJSON(needs.prepare-release.outputs.applicationChartsToRelease) }}
  #     max-parallel: 2
  #     fail-fast: false
  #   steps:
  #     - name: Echo chart folder
  #       if: ${{ !contains(fromJSON(needs.prepare-release.outputs.repoConfiguration).excluded-charts-release, matrix.charts) }}
  #       run: |
  #         echo ${{ matrix.charts }}

  #   uses: ./.github/workflows/charts-release-ghpages.yaml
  #   with:
  #     charts: "${{ needs.prepare.outputs.libraryChartsToRelease }}"
  #   secrets: inherit

  # tag-library-charts:
  #   name: Create git tags for library charts
  #   uses: ./.github/workflows/tag-charts.yaml
  #   needs:
  #     - prepare
  #     - release-library-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.libraryChartsToRelease }}"
  #   secrets: inherit

  # release-application-charts:
  #   name: Release Application charts to GitHub pages
  #   uses: ./.github/workflows/charts-release-ghpages.yaml
  #   needs:
  #     - prepare
  #     - release-library-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.applicationChartsToRelease }}"
  #   secrets: inherit

  # tag-application-charts:
  #   name: Create git tags for application charts
  #   uses: ./.github/workflows/tag-charts.yaml
  #   needs:
  #     - prepare
  #     - release-application-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.applicationChartsToRelease }}"
  #   secrets: inherit

  # release-github-oci:
  #   name: Release Application charts to GitHub Container Registry
  #   uses: ./.github/workflows/charts-release-oci.yaml
  #   needs:
  #     - prepare
  #     - release-library-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.applicationChartsToRelease }}"
  #   secrets: inherit

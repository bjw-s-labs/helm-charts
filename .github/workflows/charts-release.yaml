name: "Charts: Release"

concurrency: helm-release

on:
  workflow_dispatch:
    inputs:
      charts:
        description: >
          Charts to release. Comma-separated string.
          Defaults to releasing everything.
        default: ""
        required: false

  push:
    branches:
      - main
      - rework-publishing-ci
    paths:
      - "charts/**"

env:
  HELM_VERSION: 3.11.2

jobs:
  changed-charts:
    name: Prepare data required for release
    runs-on: ubuntu-22.04
    outputs:
      libraryChartsToRelease: ${{ steps.changed-library-charts.outputs.all_changed_files }}
      applicationChartsToRelease: ${{ steps.changed-charts.outputs.all_changed_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed library charts
        id: changed-library-charts
        uses: tj-actions/changed-files@v45
        with:
          base_sha: main
          path: charts
          dir_names: true
          dir_names_max_depth: 2
          files: |
            library/common/**

      - name: Get changed charts
        id: changed-charts
        uses: tj-actions/changed-files@v45
        with:
          base_sha: main
          path: charts
          dir_names: true
          dir_names_max_depth: 2
          files_ignore: |
            library/**

      - name: List all changed library charts
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-library-charts.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      - name: List all changed library charts
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-charts.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done

      # - name: Collect charts to release
      #   uses: bjw-s/helm-charts-actions/collect-charts@main
      #   id: collect-charts
      #   with:
      #     repoConfigFile: ./.ci/repo-config.yaml
      #     overrideCharts: "[${{ inputs.charts }}]"
      #     requireHeadAheadOfBase: false

  release-library-charts:
    name: Release Library charts
    runs-on: ubuntu-22.04
    needs:
      - changed-charts
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-charts.outputs.libraryChartsToRelease) }}
      max-parallel: 2
      fail-fast: false
    steps:
      - name: List all changed library charts
        run: |
          echo ${{ matrix.files }}

  release-charts:
    name: Release Library charts
    runs-on: ubuntu-22.04
    needs:
      - changed-charts
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-charts.outputs.applicationChartsToRelease) }}
      max-parallel: 2
      fail-fast: false
    steps:
      - name: List all changed library charts
        run: |
          echo ${{ matrix.files }}

  #   uses: ./.github/workflows/charts-release-ghpages.yaml
  #   with:
  #     charts: "${{ needs.prepare.outputs.libraryChartsToRelease }}"
  #   secrets: inherit

  # tag-library-charts:
  #   name: Create git tags for library charts
  #   uses: ./.github/workflows/tag-charts.yaml
  #   needs:
  #     - prepare
  #     - release-library-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.libraryChartsToRelease }}"
  #   secrets: inherit

  # release-application-charts:
  #   name: Release Application charts to GitHub pages
  #   uses: ./.github/workflows/charts-release-ghpages.yaml
  #   needs:
  #     - prepare
  #     - release-library-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.applicationChartsToRelease }}"
  #   secrets: inherit

  # tag-application-charts:
  #   name: Create git tags for application charts
  #   uses: ./.github/workflows/tag-charts.yaml
  #   needs:
  #     - prepare
  #     - release-application-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.applicationChartsToRelease }}"
  #   secrets: inherit

  # release-github-oci:
  #   name: Release Application charts to GitHub Container Registry
  #   uses: ./.github/workflows/charts-release-oci.yaml
  #   needs:
  #     - prepare
  #     - release-library-charts
  #   with:
  #     charts: "${{ needs.prepare.outputs.applicationChartsToRelease }}"
  #   secrets: inherit
